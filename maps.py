import requests
import shutil

files = [
'US_Alabama_Montgomery.mwm',
'US_Alaska.mwm',
'US_Arizona_Flagstaff.mwm',
'US_Arizona_Phoenix.mwm',
'US_Arizona_Tucson.mwm',
'US_Arkansas_North.mwm',
'US_Arkansas_South.mwm',
'US_California_Bakersfield_Bakersfield.mwm',
'US_California_Bakersfield_Lancaster.mwm',
'US_California_Chico.mwm',
'US_California_LA North.mwm',
'US_California_LA.mwm',
'US_California_Redding.mwm',
'US_California_Sacramento_Fresno.mwm',
'US_California_Sacramento_Sacramento.mwm',
'US_California_Sacramento_Stockton.mwm',
'US_California_San Diego.mwm',
'US_California_Santa_Clara_Palo Alto.mwm',
'US_California_Santa_Clara_Santa Cruz.mwm',
'US_Colorado_Aspen.mwm',
'US_Colorado_Denver.mwm',
'US_Colorado_South.mwm',
'US_Connecticut.mwm',
'US_Delaware.mwm',
'US_Florida_Gainesville.mwm',
'US_Florida_Jacksonville.mwm',
'US_Florida_Miami.mwm',
'US_Florida_Orlando.mwm',
'US_Florida_Tampa.mwm',
'US_Georgia_Atlanta.mwm',
'US_Georgia_Macon.mwm',
'US_Georgia_North.mwm',
'US_Georgia_South.mwm',
'US_Guam.mwm',
'US_Hawaii.mwm',
'US_Idaho_North.mwm',
'US_Idaho_South.mwm',
'US_Illinois_Chickago.mwm',
'US_Illinois_Elgin.mwm',
'US_Illinois_Rockford.mwm',
'US_Illinois_South.mwm',
'US_Illinois_Springfield.mwm',
'US_Indiana_Evansville.mwm',
'US_Indiana_Indianapolis.mwm',
'US_Indiana_North.mwm',
'US_Iowa_Des Moines.mwm',
'US_Iowa_Waterloo.mwm',
'US_Iowa_West.mwm',
'US_Kansas_East.mwm',
'US_Kansas_West.mwm',
'US_Kansas_Wichita.mwm',
'US_Kentucky_East.mwm',
'US_Kentucky_Louisville.mwm',
'US_Kentucky_West.mwm',
'US_Louisiana_Central.mwm',
'US_Louisiana_New Orleans.mwm',
'US_Maine.mwm',
'US_Maryland_Baltimore.mwm',
'US_Maryland_and_DC.mwm',
'US_Massachusetts_Boston.mwm',
'US_Massachusetts_Central.mwm',
'US_Massachusetts_Plymouth.mwm',
'US_Massachusetts_Southeastern.mwm',
'US_Massachusetts_West.mwm',
'US_Michigan_Detroit.mwm',
'US_Michigan_Grand Rapids.mwm',
'US_Michigan_Lansing.mwm',
'US_Michigan_North.mwm',
'US_Minnesota_Minneapolis.mwm',
'US_Minnesota_North.mwm',
'US_Minnesota_Rochester.mwm',
'US_Minnesota_Saint Cloud.mwm',
'US_Mississippi_Gulfport.mwm',
'US_Mississippi_North.mwm',
'US_Missouri_East.mwm',
'US_Missouri_Kansas.mwm',
'US_Missouri_Springfield.mwm',
'US_Missouri_St Louis.mwm',
'US_Montana_East.mwm',
'US_Montana_West.mwm',
'US_Nebraska_East.mwm',
'US_Nebraska_West.mwm',
'US_Nevada.mwm',
'US_New Hampshire.mwm',
'US_New Jersey_North.mwm',
'US_New Jersey_South.mwm',
'US_New Mexico_Albuquerque.mwm',
'US_New Mexico_Roswell.mwm',
'US_New York_East.mwm',
'US_New York_New York.mwm',
'US_New York_North.mwm',
'US_New York_West.mwm',
'US_North Carolina_Asheville.mwm',
'US_North Carolina_Charlotte.mwm',
'US_North Carolina_Greensboro.mwm',
'US_North Carolina_Raleigh.mwm',
'US_North Carolina_Wilmington.mwm',
'US_North Carolina_Wilson.mwm',
'US_North Dakota_Bismarck.mwm',
'US_North Dakota_East.mwm',
'US_North Dakota_Minot.mwm',
'US_Ohio_Cincinnati.mwm',
'US_Ohio_Cleveland.mwm',
'US_Ohio_Columbus.mwm',
'US_Ohio_Toledo.mwm',
'US_Oklahoma_East.mwm',
'US_Oklahoma_Oklahoma.mwm',
'US_Oklahoma_Tulsa.mwm',
'US_Oklahoma_West.mwm',
'US_Oregon_Eugene.mwm',
'US_Oregon_Portland.mwm',
'US_Oregon_West.mwm',
'US_Pennsylvania_Central.mwm',
'US_Pennsylvania_Pittsburgh.mwm',
'US_Pennsylvania_Reading.mwm',
'US_Pennsylvania_Scranton.mwm',
'US_Puerto Rico.mwm',
'US_Rhode Island.mwm',
'US_South Carolina_Charleston.mwm',
'US_South Carolina_Columbia.mwm',
'US_South Carolina_Florence.mwm',
'US_South Dakota.mwm',
'US_Tennessee_East.mwm',
'US_Tennessee_West.mwm',
'US_Texas_Amarillo.mwm',
'US_Texas_Austin.mwm',
'US_Texas_Dallas.mwm',
'US_Texas_Houston.mwm',
'US_Texas_Lubbock.mwm',
'US_Texas_San Antonio.mwm',
'US_Texas_Southwest.mwm',
'US_Texas_Tyler.mwm',
'US_Texas_Victoria.mwm',
'US_Texas_Wako.mwm',
'US_Texas_West.mwm',
'US_United States Minor Outlying Islands.mwm',
'US_Utah_North.mwm',
'US_Utah_South.mwm',
'US_Vermont.mwm',
'US_Wisconsin_Milwaukee.mwm',
'US_Wisconsin_North.mwm',
'US_Wyoming.mwm'
]

def download_file(filename):
    maps_url = 'http://direct.mapswithme.com/direct/latest/'
    url = maps_url + filename
    local_filename = url.split('/')[-1]
    r = requests.get(url, stream=True)
    with open(local_filename, 'wb') as f:
        shutil.copyfileobj(r.raw, f)

    return local_filename

for file in files:
    download_file(file)
